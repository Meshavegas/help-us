// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Support API",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authentifier un utilisateur et retourner un token JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Connexion d'un utilisateur",
                "parameters": [
                    {
                        "description": "Identifiants de connexion",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Connexion réussie",
                        "schema": {
                            "$ref": "#/definitions/controllers.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Erreur de validation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Identifiants incorrects",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Déconnecter l'utilisateur (invalide le token côté client)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Déconnexion",
                "responses": {
                    "200": {
                        "description": "Déconnexion réussie",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Générer un nouveau token JWT à partir d'un token existant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Rafraîchir le token JWT",
                "responses": {
                    "200": {
                        "description": "Nouveau token généré",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Token invalide",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Créer un nouveau compte utilisateur",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Inscription d'un utilisateur",
                "parameters": [
                    {
                        "description": "Données d'inscription",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Utilisateur créé avec succès",
                        "schema": {
                            "$ref": "#/definitions/controllers.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Erreur de validation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Utilisateur déjà existant",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Vérifie l'état de l'API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Vérification de santé",
                "responses": {
                    "200": {
                        "description": "API fonctionnelle",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Obtenir les informations du profil de l'utilisateur connecté",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Récupérer le profil utilisateur",
                "responses": {
                    "200": {
                        "description": "Profil utilisateur",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Utilisateur non trouvé",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Modifier les informations du profil de l'utilisateur connecté",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Mettre à jour le profil utilisateur",
                "parameters": [
                    {
                        "description": "Données de mise à jour",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profil mis à jour",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Erreur de validation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.AuthResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "controllers.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "controllers.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "role",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "family_name": {
                    "description": "Pour les familles",
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "phone_number": {
                    "type": "string"
                },
                "qualifications": {
                    "description": "Pour les enseignants",
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/models.UserRole"
                },
                "specialization": {
                    "description": "Pour les enseignants",
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "models.Address": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "courses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Course"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "postal_code": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "user_id": {
                    "description": "Foreign Key",
                    "type": "integer"
                }
            }
        },
        "models.Administrator": {
            "type": "object",
            "properties": {
                "created_offers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Offer"
                    }
                },
                "managed_resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Resource"
                    }
                },
                "user": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "user_id": {
                    "type": "integer"
                },
                "validated_reports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Report"
                    }
                }
            }
        },
        "models.Course": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/models.Address"
                },
                "address_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "duration": {
                    "description": "Duration in minutes",
                    "type": "integer"
                },
                "enseignant": {
                    "$ref": "#/definitions/models.Enseignant"
                },
                "enseignant_id": {
                    "type": "integer"
                },
                "famille": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Famille"
                        }
                    ]
                },
                "famille_id": {
                    "description": "Foreign Keys",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "mission": {
                    "$ref": "#/definitions/models.Mission"
                },
                "mission_id": {
                    "type": "integer"
                },
                "payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Payment"
                    }
                },
                "scheduled_time": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.CourseStatus"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.CourseStatus": {
            "type": "string",
            "enum": [
                "scheduled",
                "completed",
                "cancelled",
                "in_progress"
            ],
            "x-enum-varnames": [
                "CourseStatusScheduled",
                "CourseStatusCompleted",
                "CourseStatusCancelled",
                "CourseStatusInProgress"
            ]
        },
        "models.Enseignant": {
            "type": "object",
            "properties": {
                "courses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Course"
                    }
                },
                "missions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Mission"
                    }
                },
                "offers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Offer"
                    }
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Option"
                    }
                },
                "qualifications": {
                    "type": "string"
                },
                "reports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Report"
                    }
                },
                "specialization": {
                    "type": "string"
                },
                "user": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.Famille": {
            "type": "object",
            "properties": {
                "courses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Course"
                    }
                },
                "family_name": {
                    "type": "string"
                },
                "missions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Mission"
                    }
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Option"
                    }
                },
                "user": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.Mission": {
            "type": "object",
            "properties": {
                "courses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Course"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "enseignant": {
                    "$ref": "#/definitions/models.Enseignant"
                },
                "enseignant_id": {
                    "type": "integer"
                },
                "famille": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Famille"
                        }
                    ]
                },
                "famille_id": {
                    "description": "Foreign Keys",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "reports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Report"
                    }
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.MissionStatus"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.MissionStatus": {
            "type": "string",
            "enum": [
                "active",
                "completed",
                "stopped",
                "paused"
            ],
            "x-enum-varnames": [
                "MissionStatusActive",
                "MissionStatusCompleted",
                "MissionStatusStopped",
                "MissionStatusPaused"
            ]
        },
        "models.Offer": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Administrator"
                        }
                    ]
                },
                "created_by_id": {
                    "description": "Foreign Keys",
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "enseignants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Enseignant"
                    }
                },
                "hourly_rate": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "level": {
                    "type": "string"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Option"
                    }
                },
                "publication_date": {
                    "type": "string"
                },
                "requirements": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.OfferStatus"
                },
                "subject": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.OfferStatus": {
            "type": "string",
            "enum": [
                "open",
                "closed",
                "filled",
                "draft"
            ],
            "x-enum-varnames": [
                "OfferStatusOpen",
                "OfferStatusClosed",
                "OfferStatusFilled",
                "OfferStatusDraft"
            ]
        },
        "models.Option": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "creation_date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enseignant": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Enseignant"
                        }
                    ]
                },
                "enseignant_id": {
                    "description": "Foreign Keys",
                    "type": "integer"
                },
                "expiration_date": {
                    "type": "string"
                },
                "famille": {
                    "$ref": "#/definitions/models.Famille"
                },
                "famille_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "offer": {
                    "$ref": "#/definitions/models.Offer"
                },
                "offer_id": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/models.OptionStatus"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.OptionStatus": {
            "type": "string",
            "enum": [
                "active",
                "expired",
                "accepted",
                "cancelled"
            ],
            "x-enum-varnames": [
                "OptionStatusActive",
                "OptionStatusExpired",
                "OptionStatusAccepted",
                "OptionStatusCancelled"
            ]
        },
        "models.Payment": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "course": {
                    "$ref": "#/definitions/models.Course"
                },
                "course_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "payment_date": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.PaymentStatus"
                },
                "type": {
                    "$ref": "#/definitions/models.PaymentType"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "user_id": {
                    "description": "Foreign Keys",
                    "type": "integer"
                }
            }
        },
        "models.PaymentStatus": {
            "type": "string",
            "enum": [
                "pending",
                "completed",
                "failed",
                "refunded"
            ],
            "x-enum-varnames": [
                "PaymentStatusPending",
                "PaymentStatusCompleted",
                "PaymentStatusFailed",
                "PaymentStatusRefunded"
            ]
        },
        "models.PaymentType": {
            "type": "string",
            "enum": [
                "course",
                "mission",
                "advance",
                "refund"
            ],
            "x-enum-varnames": [
                "PaymentTypeCourse",
                "PaymentTypeMission",
                "PaymentTypeAdvance",
                "PaymentTypeRefund"
            ]
        },
        "models.Report": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "enseignant": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Enseignant"
                        }
                    ]
                },
                "enseignant_id": {
                    "description": "Foreign Keys",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "mission": {
                    "$ref": "#/definitions/models.Mission"
                },
                "mission_id": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/models.ReportStatus"
                },
                "submission_date": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "validated_by": {
                    "$ref": "#/definitions/models.Administrator"
                },
                "validated_by_id": {
                    "type": "integer"
                },
                "validation_date": {
                    "type": "string"
                }
            }
        },
        "models.ReportStatus": {
            "type": "string",
            "enum": [
                "submitted",
                "validated",
                "rejected",
                "pending"
            ],
            "x-enum-varnames": [
                "ReportStatusSubmitted",
                "ReportStatusValidated",
                "ReportStatusRejected",
                "ReportStatusPending"
            ]
        },
        "models.Resource": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "file_size": {
                    "description": "Size in bytes",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "is_public": {
                    "type": "boolean"
                },
                "managed_by": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Administrator"
                        }
                    ]
                },
                "managed_by_id": {
                    "description": "Foreign Keys",
                    "type": "integer"
                },
                "mime_type": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.ResourceType"
                },
                "updated_at": {
                    "type": "string"
                },
                "upload_date": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                }
            }
        },
        "models.ResourceType": {
            "type": "string",
            "enum": [
                "document",
                "video",
                "audio",
                "image",
                "link"
            ],
            "x-enum-varnames": [
                "ResourceTypeDocument",
                "ResourceTypeVideo",
                "ResourceTypeAudio",
                "ResourceTypeImage",
                "ResourceTypeLink"
            ]
        },
        "models.User": {
            "type": "object",
            "properties": {
                "addresses": {
                    "description": "Relationships",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Address"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Payment"
                    }
                },
                "phone_number": {
                    "type": "string"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Resource"
                    }
                },
                "role": {
                    "$ref": "#/definitions/models.UserRole"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.UserRole": {
            "type": "string",
            "enum": [
                "famille",
                "enseignant",
                "administrator"
            ],
            "x-enum-varnames": [
                "RoleFamille",
                "RoleEnseignant",
                "RoleAdministrator"
            ]
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "API REST Go - Plateforme Éducative",
	Description:      "API REST complète pour la gestion d'une plateforme éducative avec familles, enseignants et administrateurs",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
