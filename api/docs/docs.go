// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Support API",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère la liste de tous les utilisateurs (admin seulement)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Liste tous les utilisateurs",
                "responses": {
                    "200": {
                        "description": "Liste des utilisateurs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controllers.UserResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Accès refusé",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Obtient les détails d'un utilisateur spécifique",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Récupère un utilisateur par ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'utilisateur",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Détails de l'utilisateur",
                        "schema": {
                            "$ref": "#/definitions/controllers.UserResponse"
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Utilisateur non trouvé",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Met à jour les informations d'un utilisateur (admin seulement)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Met à jour un utilisateur",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'utilisateur",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Données de mise à jour",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Utilisateur mis à jour",
                        "schema": {
                            "$ref": "#/definitions/controllers.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Erreur de validation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Accès refusé",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Utilisateur non trouvé",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Supprime un utilisateur du système (admin seulement)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Supprime un utilisateur",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'utilisateur",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Utilisateur supprimé",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Accès refusé",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Utilisateur non trouvé",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/users/{id}/addresses": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Obtient toutes les adresses associées à un utilisateur",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Récupère les adresses d'un utilisateur",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'utilisateur",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des adresses",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Address"
                            }
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Utilisateur non trouvé",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/users/{id}/payments": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Obtient tous les paiements associés à un utilisateur",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Récupère les paiements d'un utilisateur",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'utilisateur",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des paiements",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Payment"
                            }
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Utilisateur non trouvé",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/users/{id}/resources": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Obtient toutes les ressources accessibles à un utilisateur",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Récupère les ressources d'un utilisateur",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'utilisateur",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des ressources",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Resource"
                            }
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Utilisateur non trouvé",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/courses": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère la liste des cours avec possibilité de filtrage par statut, enseignant, famille ou mission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Liste tous les cours",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Statut du cours",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ID de l'enseignant",
                        "name": "enseignant_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ID de la famille",
                        "name": "famille_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ID de la mission",
                        "name": "mission_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controllers.CourseResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Crée un nouveau cours",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Création d'un cours",
                "parameters": [
                    {
                        "description": "Données du cours",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CourseCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controllers.CourseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/courses/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère les détails d'un cours spécifique",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Détails d'un cours",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du cours",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.CourseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Met à jour les informations d'un cours existant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Mise à jour d'un cours",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du cours",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Données de mise à jour",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CourseUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.CourseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Supprime un cours existant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Suppression d'un cours",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du cours",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/courses/{id}/cancel": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Annule un cours planifié",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Annulation d'un cours",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du cours",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.CourseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/courses/{id}/complete": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Marque un cours comme terminé",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Validation d'un cours",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du cours",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.CourseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/courses/{id}/declare": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Déclare les heures effectuées pour un cours",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Déclaration des heures d'un cours",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du cours",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Heures effectuées",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "number"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.CourseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/courses/{id}/payments": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère tous les paiements associés à un cours",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Liste des paiements d'un cours",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du cours",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Payment"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/courses/{id}/schedule": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Planifie un cours à une date spécifique",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Planification d'un cours",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du cours",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Données de planification",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CourseScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.CourseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/enseignants": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère la liste de tous les enseignants",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enseignants"
                ],
                "summary": "Liste tous les enseignants",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controllers.EnseignantResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Crée un nouveau compte enseignant (admin seulement)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enseignants"
                ],
                "summary": "Création d'un enseignant",
                "parameters": [
                    {
                        "description": "Données de l'enseignant",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controllers.EnseignantResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/enseignants/nearby": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère la liste des enseignants proches d'une localisation donnée",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enseignants"
                ],
                "summary": "Liste des enseignants à proximité",
                "parameters": [
                    {
                        "type": "number",
                        "description": "Latitude",
                        "name": "lat",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Longitude",
                        "name": "lng",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Rayon de recherche en km",
                        "name": "radius",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controllers.EnseignantResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/enseignants/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère les détails d'un enseignant spécifique",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enseignants"
                ],
                "summary": "Détails d'un enseignant",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'enseignant",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.EnseignantResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Met à jour les informations d'un enseignant (admin ou propriétaire)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enseignants"
                ],
                "summary": "Mise à jour d'un enseignant",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'enseignant",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Données de mise à jour",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Supprime un compte enseignant (admin seulement)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enseignants"
                ],
                "summary": "Suppression d'un enseignant",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'enseignant",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/enseignants/{id}/courses": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère la liste des cours associés à un enseignant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enseignants"
                ],
                "summary": "Liste des cours d'un enseignant",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'enseignant",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Course"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/enseignants/{id}/missions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère la liste des missions associées à un enseignant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enseignants"
                ],
                "summary": "Liste des missions d'un enseignant",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'enseignant",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Mission"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/enseignants/{id}/options": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère la liste des options associées à un enseignant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enseignants"
                ],
                "summary": "Liste des options d'un enseignant",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'enseignant",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Option"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/enseignants/{id}/payments": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère la liste des paiements associés à un enseignant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enseignants"
                ],
                "summary": "Liste des paiements d'un enseignant",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'enseignant",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Payment"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/enseignants/{id}/reports": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère la liste des rapports soumis par un enseignant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enseignants"
                ],
                "summary": "Liste des rapports d'un enseignant",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'enseignant",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Report"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/enseignants/{id}/students": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère la liste des élèves associés à un enseignant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enseignants"
                ],
                "summary": "Liste des élèves d'un enseignant",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'enseignant",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/familles": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère la liste de toutes les familles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "familles"
                ],
                "summary": "Liste toutes les familles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controllers.FamilleResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/familles/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère les détails d'une famille spécifique",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "familles"
                ],
                "summary": "Détails d'une famille",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la famille",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.FamilleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Met à jour les informations d'une famille (admin ou propriétaire)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "familles"
                ],
                "summary": "Mise à jour d'une famille",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la famille",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Données de mise à jour",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Supprime un compte famille (admin seulement)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "familles"
                ],
                "summary": "Suppression d'une famille",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la famille",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/familles/{id}/courses": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère la liste des cours associés à une famille",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "familles"
                ],
                "summary": "Liste des cours d'une famille",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la famille",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Course"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/familles/{id}/missions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère la liste des missions associées à une famille",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "familles"
                ],
                "summary": "Liste des missions d'une famille",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la famille",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Mission"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/familles/{id}/options": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère la liste des options associées à une famille",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "familles"
                ],
                "summary": "Liste des options d'une famille",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la famille",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Option"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/familles/{id}/payments": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère la liste des paiements associés à une famille",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "familles"
                ],
                "summary": "Liste des paiements d'une famille",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la famille",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Payment"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/familles/{id}/reviews": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Ajoute un avis sur une famille (non implémenté)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "familles"
                ],
                "summary": "Ajouter un avis sur une famille",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la famille",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Données de l'avis",
                        "name": "review",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/familles/{id}/teachers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère la liste des enseignants associés à une famille",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "familles"
                ],
                "summary": "Liste des enseignants d'une famille",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la famille",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/missions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère la liste des missions avec possibilité de filtrage par statut, enseignant ou famille",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "missions"
                ],
                "summary": "Liste toutes les missions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Statut de la mission",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ID de l'enseignant",
                        "name": "enseignant_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ID de la famille",
                        "name": "famille_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controllers.MissionResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Crée une nouvelle mission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "missions"
                ],
                "summary": "Création d'une mission",
                "parameters": [
                    {
                        "description": "Données de la mission",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MissionCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controllers.MissionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/missions/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère les détails d'une mission spécifique",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "missions"
                ],
                "summary": "Détails d'une mission",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la mission",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.MissionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "missions"
                ],
                "summary": "Mise à jour d'une mission",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID mission",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Champs à mettre à jour",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MissionUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.MissionResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Supprime une mission existante",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "missions"
                ],
                "summary": "Suppression d'une mission",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la mission",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/missions/{id}/courses": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère la liste des cours associés à une mission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "missions"
                ],
                "summary": "Liste des cours d'une mission",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la mission",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Course"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/missions/{id}/payments": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère la liste des paiements associés à une mission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "missions"
                ],
                "summary": "Liste des paiements d'une mission",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la mission",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Payment"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/missions/{id}/reports": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère la liste des rapports associés à une mission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "missions"
                ],
                "summary": "Liste des rapports d'une mission",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la mission",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Report"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/offers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère la liste des offres avec possibilité de filtrage par statut, sujet et niveau",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "offers"
                ],
                "summary": "Liste toutes les offres",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Statut de l'offre",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Matière enseignée",
                        "name": "subject",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Niveau d'étude",
                        "name": "level",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controllers.OfferResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Crée une nouvelle offre",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "offers"
                ],
                "summary": "Création d'une offre",
                "parameters": [
                    {
                        "description": "Données de l'offre",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OfferCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controllers.OfferResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/offers/active": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère la liste des offres avec le statut 'open'",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "offers"
                ],
                "summary": "Liste des offres actives",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controllers.OfferResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/offers/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Recherche des offres selon différents critères",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "offers"
                ],
                "summary": "Recherche d'offres",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Terme de recherche",
                        "name": "query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controllers.OfferResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/offers/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère les détails d'une offre spécifique",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "offers"
                ],
                "summary": "Détails d'une offre",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'offre",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.OfferResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Met à jour les informations d'une offre existante",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "offers"
                ],
                "summary": "Mise à jour d'une offre",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'offre",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Données de mise à jour",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OfferUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.OfferResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Supprime une offre existante",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "offers"
                ],
                "summary": "Suppression d'une offre",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'offre",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/offers/{id}/close": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Marque une offre comme fermée",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "offers"
                ],
                "summary": "Fermeture d'une offre",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'offre",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.OfferResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/offers/{id}/options": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère toutes les options associées à une offre",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "offers"
                ],
                "summary": "Liste des options d'une offre",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'offre",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Option"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Authentifier un utilisateur et retourner un token JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Connexion d'un utilisateur",
                "parameters": [
                    {
                        "description": "Identifiants de connexion",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Connexion réussie",
                        "schema": {
                            "$ref": "#/definitions/controllers.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Erreur de validation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Identifiants incorrects",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Déconnecter l'utilisateur (invalide le token côté client)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Déconnexion",
                "responses": {
                    "200": {
                        "description": "Déconnexion réussie",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Générer un nouveau token JWT à partir d'un token existant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Rafraîchir le token JWT",
                "responses": {
                    "200": {
                        "description": "Nouveau token généré",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Token invalide",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Créer un nouveau compte utilisateur",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Inscription d'un utilisateur",
                "parameters": [
                    {
                        "description": "Données d'inscription",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Utilisateur créé avec succès",
                        "schema": {
                            "$ref": "#/definitions/controllers.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Erreur de validation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Utilisateur déjà existant",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Vérifie l'état de l'API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Vérification de santé",
                "responses": {
                    "200": {
                        "description": "API fonctionnelle",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Obtenir les informations du profil de l'utilisateur connecté",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Récupérer le profil utilisateur",
                "responses": {
                    "200": {
                        "description": "Profil utilisateur",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Utilisateur non trouvé",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Modifier les informations du profil de l'utilisateur connecté",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Mettre à jour le profil utilisateur",
                "parameters": [
                    {
                        "description": "Données de mise à jour",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profil mis à jour",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Erreur de validation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.AuthResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "controllers.CourseResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/models.Address"
                },
                "address_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "duration": {
                    "description": "Duration in minutes",
                    "type": "integer"
                },
                "enseignant": {
                    "$ref": "#/definitions/models.Enseignant"
                },
                "enseignant_id": {
                    "type": "integer"
                },
                "famille": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Famille"
                        }
                    ]
                },
                "famille_id": {
                    "description": "Foreign Keys",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "mission": {
                    "$ref": "#/definitions/models.Mission"
                },
                "mission_id": {
                    "type": "integer"
                },
                "payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Payment"
                    }
                },
                "scheduled_time": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.CourseStatus"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "controllers.EnseignantResponse": {
            "type": "object",
            "properties": {
                "addresses": {
                    "description": "Relationships",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Address"
                    }
                },
                "courses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Course"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "enseignant": {
                    "$ref": "#/definitions/models.Enseignant"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "missions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Mission"
                    }
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Option"
                    }
                },
                "payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Payment"
                    }
                },
                "phone_number": {
                    "type": "string"
                },
                "reports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Report"
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Resource"
                    }
                },
                "role": {
                    "$ref": "#/definitions/models.UserRole"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "controllers.FamilleResponse": {
            "type": "object",
            "properties": {
                "addresses": {
                    "description": "Relationships",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Address"
                    }
                },
                "courses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Course"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "famille": {
                    "$ref": "#/definitions/models.Famille"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "missions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Mission"
                    }
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Option"
                    }
                },
                "payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Payment"
                    }
                },
                "phone_number": {
                    "type": "string"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Resource"
                    }
                },
                "role": {
                    "$ref": "#/definitions/models.UserRole"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "controllers.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "controllers.MissionResponse": {
            "type": "object",
            "properties": {
                "courses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Course"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "enseignant": {
                    "$ref": "#/definitions/models.Enseignant"
                },
                "enseignant_id": {
                    "type": "integer"
                },
                "famille": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Famille"
                        }
                    ]
                },
                "famille_id": {
                    "description": "Foreign Keys",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Payment"
                    }
                },
                "reports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Report"
                    }
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.MissionStatus"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "controllers.OfferResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Administrator"
                        }
                    ]
                },
                "created_by_id": {
                    "description": "Foreign Keys",
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "enseignants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Enseignant"
                    }
                },
                "hourly_rate": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "level": {
                    "type": "string"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Option"
                    }
                },
                "publication_date": {
                    "type": "string"
                },
                "requirements": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.OfferStatus"
                },
                "subject": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "controllers.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "role",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "family_name": {
                    "description": "Pour les familles",
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "phone_number": {
                    "type": "string"
                },
                "qualifications": {
                    "description": "Pour les enseignants",
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/models.UserRole"
                },
                "specialization": {
                    "description": "Pour les enseignants",
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "controllers.UserResponse": {
            "type": "object",
            "properties": {
                "addresses": {
                    "description": "Relationships",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Address"
                    }
                },
                "administrator": {
                    "$ref": "#/definitions/models.Administrator"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "enseignant": {
                    "$ref": "#/definitions/models.Enseignant"
                },
                "famille": {
                    "$ref": "#/definitions/models.Famille"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Payment"
                    }
                },
                "phone_number": {
                    "type": "string"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Resource"
                    }
                },
                "role": {
                    "$ref": "#/definitions/models.UserRole"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.Address": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "courses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Course"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "postal_code": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "user_id": {
                    "description": "Foreign Key",
                    "type": "integer"
                }
            }
        },
        "models.Administrator": {
            "type": "object",
            "properties": {
                "created_offers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Offer"
                    }
                },
                "managed_resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Resource"
                    }
                },
                "user": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "user_id": {
                    "type": "integer"
                },
                "validated_reports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Report"
                    }
                }
            }
        },
        "models.Course": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/models.Address"
                },
                "address_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "duration": {
                    "description": "Duration in minutes",
                    "type": "integer"
                },
                "enseignant": {
                    "$ref": "#/definitions/models.Enseignant"
                },
                "enseignant_id": {
                    "type": "integer"
                },
                "famille": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Famille"
                        }
                    ]
                },
                "famille_id": {
                    "description": "Foreign Keys",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "mission": {
                    "$ref": "#/definitions/models.Mission"
                },
                "mission_id": {
                    "type": "integer"
                },
                "payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Payment"
                    }
                },
                "scheduled_time": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.CourseStatus"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.CourseCreateRequest": {
            "type": "object",
            "required": [
                "address_id",
                "duration",
                "enseignant_id",
                "location",
                "scheduled_time"
            ],
            "properties": {
                "address_id": {
                    "type": "integer"
                },
                "duration": {
                    "description": "30 min to 8 hours",
                    "type": "integer",
                    "maximum": 480,
                    "minimum": 30
                },
                "enseignant_id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "scheduled_time": {
                    "type": "string"
                }
            }
        },
        "models.CourseScheduleRequest": {
            "type": "object",
            "required": [
                "address_id",
                "duration",
                "location",
                "scheduled_time"
            ],
            "properties": {
                "address_id": {
                    "type": "integer"
                },
                "duration": {
                    "type": "integer",
                    "maximum": 480,
                    "minimum": 30
                },
                "location": {
                    "type": "string"
                },
                "scheduled_time": {
                    "type": "string"
                }
            }
        },
        "models.CourseStatus": {
            "type": "string",
            "enum": [
                "scheduled",
                "completed",
                "cancelled",
                "in_progress"
            ],
            "x-enum-varnames": [
                "CourseStatusScheduled",
                "CourseStatusCompleted",
                "CourseStatusCancelled",
                "CourseStatusInProgress"
            ]
        },
        "models.CourseUpdateRequest": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "scheduled_time": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.CourseStatus"
                }
            }
        },
        "models.Enseignant": {
            "type": "object",
            "properties": {
                "courses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Course"
                    }
                },
                "missions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Mission"
                    }
                },
                "offers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Offer"
                    }
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Option"
                    }
                },
                "qualifications": {
                    "type": "string"
                },
                "reports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Report"
                    }
                },
                "specialization": {
                    "type": "string"
                },
                "user": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.Famille": {
            "type": "object",
            "properties": {
                "courses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Course"
                    }
                },
                "family_name": {
                    "type": "string"
                },
                "missions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Mission"
                    }
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Option"
                    }
                },
                "user": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.Mission": {
            "type": "object",
            "properties": {
                "courses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Course"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "enseignant": {
                    "$ref": "#/definitions/models.Enseignant"
                },
                "enseignant_id": {
                    "type": "integer"
                },
                "famille": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Famille"
                        }
                    ]
                },
                "famille_id": {
                    "description": "Foreign Keys",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "reports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Report"
                    }
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.MissionStatus"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.MissionCreateRequest": {
            "type": "object",
            "required": [
                "enseignant_id",
                "start_date"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "enseignant_id": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "models.MissionStatus": {
            "type": "string",
            "enum": [
                "active",
                "completed",
                "stopped",
                "paused"
            ],
            "x-enum-varnames": [
                "MissionStatusActive",
                "MissionStatusCompleted",
                "MissionStatusStopped",
                "MissionStatusPaused"
            ]
        },
        "models.MissionUpdateRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.MissionStatus"
                }
            }
        },
        "models.Offer": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Administrator"
                        }
                    ]
                },
                "created_by_id": {
                    "description": "Foreign Keys",
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "enseignants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Enseignant"
                    }
                },
                "hourly_rate": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "level": {
                    "type": "string"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Option"
                    }
                },
                "publication_date": {
                    "type": "string"
                },
                "requirements": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.OfferStatus"
                },
                "subject": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.OfferCreateRequest": {
            "type": "object",
            "required": [
                "description",
                "hourly_rate",
                "level",
                "subject",
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "hourly_rate": {
                    "type": "number",
                    "minimum": 0
                },
                "level": {
                    "type": "string"
                },
                "requirements": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.OfferStatus": {
            "type": "string",
            "enum": [
                "open",
                "closed",
                "filled",
                "draft"
            ],
            "x-enum-varnames": [
                "OfferStatusOpen",
                "OfferStatusClosed",
                "OfferStatusFilled",
                "OfferStatusDraft"
            ]
        },
        "models.OfferUpdateRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "hourly_rate": {
                    "type": "number"
                },
                "level": {
                    "type": "string"
                },
                "requirements": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.OfferStatus"
                },
                "subject": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.Option": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "creation_date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enseignant": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Enseignant"
                        }
                    ]
                },
                "enseignant_id": {
                    "description": "Foreign Keys",
                    "type": "integer"
                },
                "expiration_date": {
                    "type": "string"
                },
                "famille": {
                    "$ref": "#/definitions/models.Famille"
                },
                "famille_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "offer": {
                    "$ref": "#/definitions/models.Offer"
                },
                "offer_id": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/models.OptionStatus"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.OptionStatus": {
            "type": "string",
            "enum": [
                "active",
                "expired",
                "accepted",
                "cancelled"
            ],
            "x-enum-varnames": [
                "OptionStatusActive",
                "OptionStatusExpired",
                "OptionStatusAccepted",
                "OptionStatusCancelled"
            ]
        },
        "models.Payment": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "course": {
                    "$ref": "#/definitions/models.Course"
                },
                "course_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "payment_date": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.PaymentStatus"
                },
                "type": {
                    "$ref": "#/definitions/models.PaymentType"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "user_id": {
                    "description": "Foreign Keys",
                    "type": "integer"
                }
            }
        },
        "models.PaymentStatus": {
            "type": "string",
            "enum": [
                "pending",
                "completed",
                "failed",
                "refunded"
            ],
            "x-enum-varnames": [
                "PaymentStatusPending",
                "PaymentStatusCompleted",
                "PaymentStatusFailed",
                "PaymentStatusRefunded"
            ]
        },
        "models.PaymentType": {
            "type": "string",
            "enum": [
                "course",
                "mission",
                "advance",
                "refund"
            ],
            "x-enum-varnames": [
                "PaymentTypeCourse",
                "PaymentTypeMission",
                "PaymentTypeAdvance",
                "PaymentTypeRefund"
            ]
        },
        "models.Report": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "enseignant": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Enseignant"
                        }
                    ]
                },
                "enseignant_id": {
                    "description": "Foreign Keys",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "mission": {
                    "$ref": "#/definitions/models.Mission"
                },
                "mission_id": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/models.ReportStatus"
                },
                "submission_date": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "validated_by": {
                    "$ref": "#/definitions/models.Administrator"
                },
                "validated_by_id": {
                    "type": "integer"
                },
                "validation_date": {
                    "type": "string"
                }
            }
        },
        "models.ReportStatus": {
            "type": "string",
            "enum": [
                "submitted",
                "validated",
                "rejected",
                "pending"
            ],
            "x-enum-varnames": [
                "ReportStatusSubmitted",
                "ReportStatusValidated",
                "ReportStatusRejected",
                "ReportStatusPending"
            ]
        },
        "models.Resource": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "file_size": {
                    "description": "Size in bytes",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "is_public": {
                    "type": "boolean"
                },
                "managed_by": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Administrator"
                        }
                    ]
                },
                "managed_by_id": {
                    "description": "Foreign Keys",
                    "type": "integer"
                },
                "mime_type": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.ResourceType"
                },
                "updated_at": {
                    "type": "string"
                },
                "upload_date": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                }
            }
        },
        "models.ResourceType": {
            "type": "string",
            "enum": [
                "document",
                "video",
                "audio",
                "image",
                "link"
            ],
            "x-enum-varnames": [
                "ResourceTypeDocument",
                "ResourceTypeVideo",
                "ResourceTypeAudio",
                "ResourceTypeImage",
                "ResourceTypeLink"
            ]
        },
        "models.User": {
            "type": "object",
            "properties": {
                "addresses": {
                    "description": "Relationships",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Address"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Payment"
                    }
                },
                "phone_number": {
                    "type": "string"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Resource"
                    }
                },
                "role": {
                    "$ref": "#/definitions/models.UserRole"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.UserCreateRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "role",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "family_name": {
                    "description": "For Famille",
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "phone_number": {
                    "type": "string"
                },
                "qualifications": {
                    "description": "For Enseignant",
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/models.UserRole"
                },
                "specialization": {
                    "description": "For Enseignant",
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "models.UserRole": {
            "type": "string",
            "enum": [
                "famille",
                "enseignant",
                "administrator"
            ],
            "x-enum-varnames": [
                "RoleFamille",
                "RoleEnseignant",
                "RoleAdministrator"
            ]
        },
        "models.UserUpdateRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "family_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "qualifications": {
                    "type": "string"
                },
                "specialization": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "API REST Go - Plateforme Éducative",
	Description:      "API REST complète pour la gestion d'une plateforme éducative avec familles, enseignants et administrateurs",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
